// google fonts [ font-family: 'Poppins', sans-serif; ]
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@200&display=swap');

// CSS Reset
* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}
// CSS Variables
:root {

    // wireframe main color
    --blueink: darkblue;

    // developer borders
    --wireframe: 2px solid var(--blueink);
    --component: 2px solid limegreen;
    --debugging: 2px solid darkred;

    // global border radius
    --border-rd: 8px;

    --google-ft: 'Poppins', sans-serif;

}

// application wrapper
.app {
    position: relative;

    height: 100vh;
    width: 100%;
    padding: 1rem;

    // set the entire applications font family as [ google-ft : poppins ]
    font-family: var(--google-ft);

    // developer border
    border: var(--wireframe);
}

/*
    Main Application Container

    Contains application components
        1. Header - Application Stage Visual Loader
        2. Section - Postcard Component
        3. Article - Card Creation Module
        4. Navigation - Navigation Button Container

*/
main {

    // display properties [ flex - col - center - center ]
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    height: 100%;
    padding: 0.5rem;

    // developer border
    border: var(--wireframe);

    // Header Component : Visual Application Process
    header {
        // pre-defined dimensions
        width: 100%;
        max-width: 400px;
        height: 50px;

        // display properties [ flex - center - center ]
        display: flex;
        justify-content: center;
        align-items: center;

        // developer border
        border: var(--wireframe);
        border-radius: var(--border-rd);

    }

    // Section Component : Postcard Container Element
    section {

        // position properties [ relative ]
        position: relative;

        // pre-defined dimensions & spacing
        height: 225px;
        width: 500px;
        padding: 1rem;

        // provide spacing for the application stages container
        margin-top: 0.5rem;

        // preserve 3D style
        transform-style: preserve-3d;

        // display properties [ flex - center - center ]
        display: flex;
        justify-content: center;
        align-items: center;

        // developer border
        border-radius: 8px;
    }

    // Navigation Component : Navigation Button Container
    nav {
        
        // pre-defined dimensions & spacing
        width: 400px;
        height: 50px;
        margin-top: 0.5rem;

        // display properties [ flex - space-evenly - center ]
        display: flex;
        justify-content: space-evenly;
        align-items: center;

        // developer border
        border: var(--wireframe);
        border-radius: var(--border-rd);
    }

    // Article Component : Postcard Component Face Elements ( Front + Back )
    article {
        // position properties [ absolute - top - left ]
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;

        // display properties [ flex - center - center ]
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;

        /* mozilla & edge browser support */
        -moz-backface-visibility: hidden;
        -webkit-backface-visibility: hidden;
        
        // transform properties
        transition: 1s ease-in-out;
        transform: perspective(770px) rotateY(0deg);
        transform-style: preserve-3d;

        backface-visibility: hidden;

        // background position properties
        background-position: center;
        background-size: cover;

        // developer border [ change to box-shadow on production build ]
        border: var(--wireframe);
        border-radius: 8px;
    }

}


/*
    Header Component : Application Stage Visual Loader

    Provides the user with a visual pathway for the application
    creation process.
        1. List - Un-ordered List Element
        2. Items - Un-ordered List Items
        3. Span - Animated Loading / Process Line
*/
header .list {

    display: flex;
    align-items: center;
    justify-content: space-around;
    color: #FFF;
    text-align: center;
    list-style-type: none;

    width: 100%;
    padding: 0;
    margin: 0;
    
}
header .items {
    padding: 0;
    margin: 0;
    
    height: 20px;
    width: 20px;
    border: var(--wireframe);
    border-radius: 50%;
}


/*
    Postcard Component : Card Creation Module

        Contains the card component with the creation module 
        forms & overlays.
        1. Face Front : Placement for Creation Module Forms
        2. Face Back : Placement for Memo & Recipient Data
*/
section .face.front {
    transform-style: preserve-3d;

    // background property attributes
    background-position: center;
    background-size: cover;
}
section .face.back {
    // set a base background to differientiate from front face
    background: #FFF;
    justify-content: space-evenly;
    align-items: flex-end;
    padding: 1rem;
    
    // transform the back face 180 deg ( hide the content )
    transform: perspective(770px) rotateY(180deg);

    // preserve the 3D attributes
    transform-style: preserve-3d;
}

/* .postcard:hover .face.front {
transform: perspective(500px) rotateY(180deg);
}
.postcard:hover .face.back {
transform: perspective(500px) rotateY(360deg);
} */


/*
    Form Module : Memo - [ Output Data ]

        Sender Message : Textarea data output element for preview.

        Recipient List : List module output element for recipient data.

*/
.postcard-content {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;

    // developer border
    border: var(--wireframe);
    border-radius: var(--border-rd);
    
}
.sender-message {
    // full container height & element confined width [ 60 % width ]
    height: 100%;
    width: 60%;

    // display properties [ flex - center - center ]
    display: flex;
    justify-content: center;
    align-items: center;

    text-align: center;

    padding: 0.25rem;

    // developer border
    // border: var(--wireframe);
    border-radius: var(--border-rd);
    
}
.recipient-list {
    // full container height & element confined width [ 40 % width ]
    height: 100%;
    width: 40%;

    // display properties [ flex - column - flex-end ]
    display: flex;
    flex-direction: column;
    justify-content: flex-end;

    // remove default list styles
    list-style-type: none;

    padding: 0.25rem;

    // developer border
    // border: var(--wireframe);
    border-left: var(--wireframe);
    // border-radius: var(--border-rd);

    // recipient list [ li ]
    li {
        // basic preview list styles
        padding-left: 0.5rem;
        color: #000;
        // font-weight: bold;
        font-size: 0.85rem;
        text-decoration: underline;
        border: var(--wireframe);
    }
    li:nth-child(4) {
        // apply spacing to the bottom of the last element in the list
        margin-bottom: 0.5rem;
    }
}

/*
    Color Selection Module : Colors List

        Replaces an action button on the navigation button container 
        with five ( 5 ) color choices for the postcard.
*/
.colors-list {

    

    // placement [ top - center ]
    height: 50px;   
    width: 400px;
    
    position: absolute;
    top: 10px;
    left: 50%;
    transform: translate(-50%);

    // display properties [ flex - space-evenly - center ]
    display: flex;
    // flex-direction: column;
    justify-content: space-evenly;
    align-items: center;

    // remove default list styles
    list-style-type: none;

    background: #FFF;

    
    /* dev border */
    border: var(--wireframe);
    border-radius: var(--border-rd);

    // colors list li [ colors ]
    .colors {
        // pre-defined dimensions [ creates a circle ]
        height: 30px;
        width: 30px;
        border-radius: 50%;
        
        // developer border
        border: var(--wireframe);
    }
}


/*
    Form Modules

    Both form modules will be encased inside a postcard component.

    If in creative mode ( user interaction ), the form will be attached
    on the 'front' of the postcard face component.

    Contains
        1. Global Form Styles
        2. Specific Form Styles 
            a. Title Form : User Title Selection
            b. Memo Form : User Notes + Recipient Data

*/

// global form properties
form {

    // expand the full width of the parent element ( postcard container )
    height: 100%;
    width: 100%;
    
    // display properties [ flex ]
    display: flex;
    padding: 1rem;

    /* developer border */
    border: var(--wireframe);

    // form components
    label {
        font-size: 1rem;
        text-transform: capitalize;
        letter-spacing: 1px;
        padding-bottom: 1rem;
        color: whitesmoke;
    }
}

/* forms */
#title-form {
    // expand the full height & width of the parent element ( postcard container )
    height: 100%;
    width: 100%;
    
    // display properties [ flex - col - center - center ]
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    padding: 2rem;
    z-index: 10;
    
    // set an background overlay for the title form
    background: rgba(0, 0, 0, 0.7);

    // developer border [ remove this on production ]
    border: var(--wireframe);

}
#title-form input {
    // set pre-defined height & max-width for input element
    height: 45px;
    width: 100%;
    max-width: 300px; // set a max width for the title input element
    text-align: center;

    // developer border
    border: var(--wireframe);
    border-radius: var(--border-rd);

    // input style attributes
    font-size: 1rem;
    letter-spacing: 1.5px;
    color: var(--blueink);
    font-weight: bold;
    
}
#title-form button {
    margin-top: 1rem;
    
    
    width: 100%;
    max-width: 140px;
    
    border: var(--wireframe);
    border-radius: var(--border-rd);
}

/* form [ control ] containers */
.control {
    height: 100%;
    
    /* provide both control containers with display property flex */
    display: flex;

    /* developer border */
    border: var(--component);
}
.control:nth-child(1) {
    /* position textarea into the center of the container */
    justify-content: center;
    align-items: center;
    
    /* pre-defined width [ 60% of card ] */
    width: 60%;
}
.control:nth-child(2) {
    /* position the input elements into a column in the center of the container */
    flex-direction: column;
    align-items: center;
    justify-content: flex-end;

    /* pre-defined width [ 40% of card ] */
    width: 40%;
    
}
/* form control [ input ] elements */
.control input {
    // height: 30px;
    padding: 0.05rem;
    padding-left: 0.5rem;
    border: none;
    border-bottom: 1px solid #000;
    margin-bottom: 0.25rem;

    background: transparent;

    border: var(--wireframe);
}
.control input:last-child {
    margin-bottom: 0.5rem;
}
/* form control input [ placeholder ] elements */
::placeholder {
    color: #000;
    text-transform: uppercase;
    letter-spacing: 1px;
    
}
textarea {
    /* height: 100%; */
    width: 100%;
    height: 100%;
    font-size: 1.22rem;
    background: transparent;
    

    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
    
    border: var(--wireframe);
}


/*
    Navigation Component Elements

        Contains all application event buttons.
        Provides global styles & attributes to all navigation buttons
        and an ease-in transition when each button state changes.
*/
button {

    // pre-defined dimensions & spacing
    padding: 0.25rem;
    height: 30px;
    width: 140px;
    
    // global button styles
    background: #FFF;
    color: var(--blueink);
    letter-spacing: 2px;
    text-transform: uppercase;
    
    // transition properties [ hover-attributes ]
    transition: 200ms all ease-in-out;

    // developer border
    border: var(--wireframe);
    border-radius: var(--border-rd);
}
button:hover {
    transition: 200ms all ease-in;

    // transition change attributes
    background: var(--blueink);
    color: #FFF;
}

/*
    This button [ Finalize-Button ] will be appended to the back of
    the postcard component module.
*/
.back button {
    // position properties [ absolute - 50% - 50% - translate ( -50% )
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}


/*
    File Upload Module

    Contains an input element [ upload-image ] and a button
    element [ image-button ]

*/

#upload-image {display:none;} /* remove the input file from view */

// image upload input element
#image-upload {
    display: flex;
    justify-content: center;
    text-align: center;
    padding: 1.25rem;

    // developer border
    border: var(--wireframe);

}
// image upload input container
input[type=file] {
    background: red;
}
// image upload input button
::file-selector-button {
    background: red;
}

// user helper elements
.helper {
    height: 100%;
    width: 100%;

    display: flex;
    justify-content: center;
    align-items: center;
    
    padding: 1rem;
    color: var(--blueink);
    color: #000;

    font-size: 1rem;
    
    // developer border
    border: var(--component);
    border-radius: var(--border-rd);
}


/* title placement data variables */
.placement-tl {
    /* position placement [ top-left ] */
    position: absolute;
    top: 10px;
    left: 10px;

    /* developer border */
    border: var(--component);
}
.placement-tr {
    /* position placement [ top-right ] */
    position: absolute;
    top: 10px;
    right: 10px;

    /* developer border */
    border: var(--component);
}
.placement-bl {
    /* position placement [ bottom-left ] */
    position: absolute;
    bottom: 10px;
    left: 10px;

    /* developer border */
    border: var(--component);
}
.placement-br {
    /* position placement [ bottom-right ] */
    position: absolute;
    bottom: 10px;
    right: 10px;

    /* developer border */
    border: var(--component);
}

































// media query for [ mobile : portrait mode ]
@media screen and (orientation: portrait) {

    // display the application [ orientation ] helper element
    .orientation {

        display: block;

        border: var(--wireframe);
        padding: 0.5rem;
        font-size: 1.2rem;
        text-align: left;
        color: #000;
        font-weight: normal;

        .title {
            font-size: 1rem;
            text-decoration: underline;
            padding-top: 0.5rem;
            padding-bottom: 0.5rem;
            font-weight: bold;
        }
    }

    // remove the main application elements from view
    .postcard {display:none;}
    .buttons {display:none;}

    /* remove the [ nofile ] helper element */
    // .nofile {display:none;} 
}

/* 
    Once the user is informed to use the landscape orientation on mobile,
    apply the following styles for the postcard preview element.

*/
@media screen and (orientation: landscape) {

    /* remove the [ orientation ] helper from view */
    .orientation {display:none;}
    
    
    /* module [ overlay ] */
    .overlay {
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;

        // display properties [ grid - 2 col - auto row ]
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        grid-auto-rows: minmax(10px, auto);
        gap: 10px;
        padding: 10px;

        // transparent background attributes
        background: rgba(0, 0, 0, 0.9);
        border-radius: var(--rad-curved);

        // remove the overlay module 
        display: none;
    }
    // grid elements [ panels ]
    .panels {

        // display properties [ flex - center - center ]
        display: flex;
        justify-content: center;
        align-items: center;


        color: #FFF;
        font-weight: bold;
        text-transform: uppercase;

        /* developer border */
        border: var(--wireframe);

        // transition properties
        transition: 200ms all ease-in-out;
    }
    .panels:hover {
        // 
        background: red;
    }
}